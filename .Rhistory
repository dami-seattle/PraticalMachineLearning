w <- c(2, 1, 3, 1)
u <- mean(x)
for i=1:4 {
q <- q + (w[i]*(x[i]-u)^2)
}
x[3]
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
u <- mean(x)
i<-0
for i=1:4 {
q <- q + (w[i]*(x[i]-u)^2)
}
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
u <- mean(x)
i<-0
for (i in 1:4) {
q <- q + (w[i]*(x[i]-u)^2)
}
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
u <- mean(x)
for (i in 1:4) {
q <- q + (w[i]*(x[i]-u)^2)
}
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
u <- mean(x)
q <- 0
for (i in 1:4) {
q <- q + (w[i]*(x[i]-u)^2)
}
q
install.packages("UsingR")
data("mtcars")
str(mtcars)
y<-mtcars$mpg
x<-mtcars$wt
coef(lm(y~x))
b1<-cor(y,x)*sd(y)/sd(x)
b0<-mean(y)-b1*mean(x)
rbind(c(b0,b1)), coef(lm(y~x))
b1<-cor(y,x)*sd(y)/sd(x)
b0<-mean(y)-b1*mean(x)
c(b0,b1), coef(lm(y~x))
b1<-cor(y,x)*sd(y)/sd(x)
b0<-mean(y)-b1*mean(x)
rbind(c(b0,b1), coef(lm(y~x)))
coef(lm(x~y))
coef(lm(2~1))
o<-1
o<-2
p<-1
coef(lm(o~p))
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
u <- mean(x)
q <- 0
for (i in 1:10) {
q <- q + ((x[i]-u)^2)
}
q
u
a <- 2
b <- 4
cor(a, b)
cor(b, a)
?cor
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
b1<-cor(y,x)*sd(y)/sd(x)
b1
coef(lm(y~x)))
coef(lm(y~x))
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
xn <- (x-mean(m)/sd(x))
yn <- (y-mean(y)/sd(y))
b1<-cor(yn,xn)*sd(yn)/sd(xn)
coef(lm(yn~xn))
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
xn <- (x-mean(x)/sd(x))
yn <- (y-mean(y)/sd(y))
b1<-cor(yn,xn)*sd(yn)/sd(xn)
coef(lm(yn~xn))
data("mtcars")
y<-mtcars$mpg
x<-mtcars$wt
yn <- as.numeric(as.character(y))
xn <- as.numeric(as.character(x))
coef(lm(y~x))
coef(lm(yn~xn))
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
xn <- (x-mean(x)/sd(x))
yn <- (y-mean(y)/sd(y))
b1<-cor(yn,xn)*sd(yn)/sd(xn)
coef(lm(yn~xn))
coef(lm(y~x))
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
# xn <- (x-mean(x)/sd(x))
# yn <- (y-mean(y)/sd(y))
# b1<-cor(yn,xn)*sd(yn)/sd(xn)
# coef(lm(yn~xn))
coef(lm(y~x))/coef(lm(x~y))
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
# xn <- (x-mean(x)/sd(x))
# yn <- (y-mean(y)/sd(y))
# b1<-cor(yn,xn)*sd(yn)/sd(xn)
# coef(lm(yn~xn))
coef(lm(y~x)), coef(lm(x~y))
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
# xn <- (x-mean(x)/sd(x))
# yn <- (y-mean(y)/sd(y))
# b1<-cor(yn,xn)*sd(yn)/sd(xn)
# coef(lm(yn~xn))
coef(lm(y~x))
coef(lm(x~y))
-1.17/-0.04
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
# xn <- (x-mean(x)/sd(x))
# yn <- (y-mean(y)/sd(y))
# b1<-cor(yn,xn)*sd(yn)/sd(xn)
# coef(lm(yn~xn))
coef(lm(y~x))
coef(lm(x~y))
(cor(y,x)*sd(y)/sd(x))/(cor(y,x)*sd(x)/sd(y))
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
# xn <- (x-mean(x)/sd(x))
# yn <- (y-mean(y)/sd(y))
# b1<-cor(yn,xn)*sd(yn)/sd(xn)
# coef(lm(yn~xn))
coef(lm(y~x))
coef(lm(x~y))
(cor(y,x)*sd(y)/sd(x))/(cor(y,x)*sd(x)/sd(y))
cor(y,x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
# xn <- (x-mean(x)/sd(x))
# yn <- (y-mean(y)/sd(y))
# b1<-cor(yn,xn)*sd(yn)/sd(xn)
# coef(lm(yn~xn))
coef(lm(y~x))
coef(lm(x~y))
(cor(y,x)*sd(y)/sd(x))/(cor(y,x)*sd(x)/sd(y))
var(y)/var(x)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
xn <- (x-mean(x)/sd(x))
xn
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
u <- mean(x)
q <- 0
for (i in 1:4) {
q <- q + (w[i]*(x[i]-u)^2)
print(q)
}
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
mean(x)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
mean(x)
(x[1]-mean(x))^2
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
u <- mean(x)
q <- 0
for (i in 1:4) {
q <- q + (w[i]*(x[i]-u)^2)
print(q)
}
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
u <- mean(x)
q <- 0
for (i in 1:4) {
q[i] <- (w[i]*(x[i]-u)^2)
print(q[i])
}
q
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
u <- mean(x)
# (x[1]-mean(x))^2
# xn <- (x-mean(x)/sd(x))
# xn
q <- 0
for (i in 1:5) {
q[i] <- ((x[i]-u)^2)
print(q[i])
}
lm(q~x)
install.packages("UsingR")
data(diamond)
(UsingR);data(Diamond)
library(UsingR)
data("diamond")
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
resid(lm(y~x))
?t.test
t.test(x, y, alternative = two.sided)
t.test(x, y, alternative = c("two.sided")
)
coef(lm(y~x))
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
t.test(x, y, alternative = c("two.sided"))
coef(lm(y~x))
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
yn <- as.numeric(as.character(y))
xn <- as.numeric(as.character(x))
coef(lm(y~x))
coef(lm(yn~xn))
t.test(xn, yn, alternative = c("two.sided"))
t.test(x, y)
resid(x)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
resid(lm(y~x))
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit <- lm(y~x)
resid(fit)
sd(resid(fit))
summary(fit)
data("mtcars")
y<-mtcars$mpg
x<-mtcars$wt
yn <- as.numeric(as.character(y))
xn <- as.numeric(as.character(x))
coef(lm(y~x))
coef(lm(yn~xn))
fit <- lm(y~x)
summary(fit)
library(ggplot2)
plot(x,y)
length(x)
error <- qnorm(0.975)*3.046/sqrt(32)
error
mean(x)
mean(x)-error
?mtcars
x
error <- qt(0.975, df=31)*3.046/sqrt(32)
mean(x)-error
sd(x)
error <- qt(0.975, df=31)*0.9784574/sqrt(32)
mean(x)-error
error <- qt(0.95, df=31)*sd(x)/sqrt(32)
mean(x)-error
data("mtcars")
y<-mtcars$mpg
x<-mtcars$wt
yn <- as.numeric(as.character(y))
xn <- as.numeric(as.character(x))
coef(lm(y~x))
coef(lm(yn~xn))
fit <- lm(y~x)
summary(fit)
coef(fit)[1]+coef(fit)[2]
coef(fit)[1]
coef(fit)[2]
coef(fit)[1]+coef(fit)[2]*3000
?predict
predict(fit, 3000)
predict(fit, data <- 3000)
ncar <- 3000
predict(fit, ncar)
class(ncar)
ncar <- data.frame(ncar)
class(ncar)
predict(fit, ncar)
predict(fit, data = ncar)
fit1 <- lm(price~I(x*3))
fit1 <- lm(y~I(x*3))
coef(fit1)
coef(fit)
fit1 <- lm(y~I(x/3))
coef(fit1)
predict(fit, ncar)
predict(fit1, ncar)
coef(fit1)
coef(fit)[1]+coef(fit)[2]*3000
coef(fit1)[1]+coef(fit1)[2]
coef(fit1)[1]+coef(fit1)[2]
predict(fit1, ncar)
predict(fit, ncar/1000, interval="prediction", level = .9)
predict(fit, ncar/1000, interval="prediction", level = .95)
predict(fit, ncar, interval="prediction", level = .95)
coef(fit)[1]+coef(fit)[2]*3
coef(fit)[1]+coef(fit)[2]
predict(fit, ncar, interval="confidence", level = .95)
predict(fit, ncar, interval="confidence", level = .95)
predict(fit, ncar, level = .95)
predict(fit, ncar, interval="prediction", level = .95)
coef(fit)[1]+coef(fit)[2]*3
coef(fit)
fit <- lm(y~x)
coef(fit)
coef(fit)[1]+coef(fit)[2]*3
fit2 <- lm(y ~ I(x/2))
predict(fit2, level = .95)
coef(fit2)
predict(fit, 1, interval="confidence", level = .95)
predict(fit2, 1, interval="confidence", level = .95)
summary(fit)
data("mtcars")
y<-mtcars$mpg
x<-mtcars$wt
yn <- as.numeric(as.character(y))
xn <- as.numeric(as.character(x))
coef(lm(y~x))
coef(lm(yn~xn))
fit <- lm(y~x)
summary(fit)
data("mtcars")
y<-mtcars$mpg
x<-mtcars$wt
# yn <- as.numeric(as.character(y))
# xn <- as.numeric(as.character(x))
# coef(lm(y~x))
# coef(lm(yn~xn))
fit <- lm(y~x)
mx <- data.frame(mean(x))
# summary(fit)
# error <- qt(0.95, df=31)*sd(x)/sqrt(32)
yhat <- predict(fit2, mx, interval="confidence", level = .95)
yhat
mx
class(mx)
yhat <- predict(fit, mx, interval="confidence")
yhat
yhat <- predict(fit, mx, interval="confidence", level = .95)
yhat
ym<-mean(mtcars$mpg)
xm<-mean(mtcars$wt)
class(xm)
fit <- lm(y~x)
mx <- data.frame(x)
yhat <- predict(fit, mx, interval="confidence", level = .95)
yhat
fit
mx
xm<-mean(aggregate(mtcars$wt))
data("mtcars")
y<-(mtcars$mpg)
x<-(mtcars$wt)
# yn <- as.numeric(as.character(y))
# xn <- as.numeric(as.character(x))
# coef(lm(y~x))
# coef(lm(yn~xn))
fit <- lm(y~x)
mx <- data.frame(mean((aggregate(x)))
# summary(fit)
aggregate())
aggregate(x)
mean(x)
mx <- data.frame(mean(x))
mx
class(mx)
yhat <- predict(fit, mx, interval="confidence", level = .95)
yhat
fit
xm
mx
rm(list=ln())
rm(list=ls())
data("mtcars")
y<-(mtcars$mpg)
x<-(mtcars$wt)
# yn <- as.numeric(as.character(y))
# xn <- as.numeric(as.character(x))
# coef(lm(y~x))
# coef(lm(yn~xn))
fit <- lm(y~x)
mx <- data.frame(mean(x))
# summary(fit)
# error <- qt(0.95, df=31)*sd(x)/sqrt(32)
yhat <- predict(fit, mx, interval="confidence")
yhat
predict(fit, mx, interval="confidence")
newdata = data.frame(waiting=80)
predict(fit, newdata, interval="confidence")
?avg
data("mtcars")
y<- mean(mtcars$mpg)
x<- mean(mtcars$wt)
# yn <- as.numeric(as.character(y))
# xn <- as.numeric(as.character(x))
# coef(lm(y~x))
# coef(lm(yn~xn))
fit <- lm(y~x)
mx <- data.frame(mean(x))
# summary(fit)
# error <- qt(0.95, df=31)*sd(x)/sqrt(32)
yhat <- predict(fit, mx, interval="confidence")
yhat
y
x
fit
fit2 <- lm(y~I(x/2)
coef(fit2)
coef(fit2)
fit2 <- lm(y~I(x/2))
coef(fit2)
data("mtcars")
y<- (mtcars$mpg)
x<- (mtcars$wt)
# yn <- as.numeric(as.character(y))
# xn <- as.numeric(as.character(x))
#
# coef(lm(yn~xn))
fit2 <- lm(y ~ I(x/2))
coef(fit2)
nx <- data.frame(nx <- 1)
nx
class(nx)
yhat2 <- predict(fit, nx, interval="confidence")
yhat2
nx <- data.frame(nx <- c(1,2))
nx
yhat2 <- predict(fit, nx, interval="confidence")
yhat2
yhat2 <- predict(fit2, nx, interval="confidence")
yhat2
nx <- data.frame(nx <- c(1))
# summary(fit)
# error <- qt(0.95, df=31)*sd(x)/sqrt(32)
yhat2 <- predict(fit2, nx, interval="confidence")
yhat2
yhat2 <- predict(fit2, nx, interval="confidence", level = .95)
yhat2
data("mtcars")
fit3 <- lm(mtcars$mpg ~ I(mtcars$wt/2), ddata = mtcars)
predict(fit3, 1, interval="confidence")
data("mtcars")
fit3 <- lm(mtcars$mpg ~ I(mtcars$wt/2), ddata = mtcars)
coef(fit3)
predict(fit3, 1, interval="confidence")
mtcars$wt
predict(fit3, 2, interval="confidence")
cor(1,3)
cor(3,1)
data("mtcars")
fit3 <- lm(mtcars$mpg ~ I(mtcars$wt*2), ddata = mtcars)
coef(fit3)
predict(fit3, 1, interval="confidence")
plot(y,x)
plot(x,y)
xx <- data.frame(nc <- c(3,4))
xx
coef(fit3)[1]+coef(fit3)[2]*nc
predict(fit3, xx)
predict(fit3, newdata = data.frame(nc))
predict(fit3, newdata = data.frame(x = nc))
predict(fit3, newdata = data.frame(x = 1))
?mtcars
lm(mpg ~ am, mtcars)
lm(mpg ~ am, mdf)
lm(mpg ~ am, df)
fit ,- lm(mpg ~ am, df)
fit <- lm(mpg ~ am, df)
fit <- lm(mpg ~ am, mtcars)
summary(fit)
?resid
plot(df)
df <- select(mtcars, mpg, am)
library(dplyr)
df <- select(mtcars, mpg, am)
plot(df)
?plot
plot(df, title(main=MPG/Transmission, ylab=Transmission Type))
plot(df, title(main=MPG and Transmission, ylab=Transmission Type))
plot(df, title(main="MPG\Transmission", ylab="Transmission Type"))
plot(df, title(main="MPG and Transmission", ylab="Transmission Type"))
plot(df, title(main="MPG and Transmission", xlab="", ylab="Transmission Type"))
plot(df, title(main="MPG and Transmission", xlab="MPG", ylab="Transmission Type"))
plot(df, title(main="MPG and Transmission", xlab="MPG", ylab="Transmission Type"))
plot(df, title(main="MPG and Transmission"))
end dv
dev.off()
plot(df, title(main="MPG and Transmission"))
dev.on()
plot(df, title(main="MPG and Transmission"))
plot(df)
plot(df, ylab="Transmission Type")
?mtcars
fit <- lm(mpg~cyl+disp+hp+wt+am, mtcars)
summary(fit)
mdata <- read.csv("pml-testing.csv", header=TRUE)
head(mdata[-c(1,7),])
rm(ls=list())
rm(list=ls())
mdata <- read.csv("pml-testing.csv", header=TRUE)
setwd("C:/0_godaddy/temp/PraticalMachineLearning")
mdata <- read.csv("pml-testing.csv", header=TRUE)
head(mdata[-c(1,7),])
head(mdata[-c(1:7),])
tdata <- read.csv("pml-training.csv", header=TRUE)
summary(tdata)
tdata2 <- read.csv("pml-training2.csv", header=TRUE)
summary(tdata2)
tdata2 <- read.csv("pml-training2.csv", header=TRUE)
summary(tdata2)
boxplot(tdata2)
str(tdata2)
